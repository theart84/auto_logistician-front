{"version":3,"sources":["store/requisition.js","store/ui.js","store/request.js","store/index.js","components/AddNewRequisitionButton/AddNewRequisitionButton.js","utils/hashMap.js","config/config.js","store/actions/requisitionActions.js","components/SearchRequisition/SearchRequisition.js","components/RequisitionTableHOC/RequisitionTable/RequisitionTable.js","utils/serializeRequisitionData.js","components/RequisitionTableHOC/RequisitionTableHOC.js","pages/Requisition.js","components/Header/Header.js","components/Layout/Layout.js","components/RequisitionDetailItem/RequisitionDetailItemLink/RequisitionDetailItemLink.js","components/RequisitionDetailItem/RequisitionDetailItem.js","pages/RequisitionDetail.js","components/RequisitionForm/RequisitionForm.js","utils/checkFormValidity.js","pages/RequisitionEdit.js","pages/NewRequisition.js","App.js","reportWebVitals.js","index.js"],"names":["requisitionSlice","createSlice","name","initialState","requisition","currentRequisitionId","currentRequisition","tableHead","reducers","initialFetch","state","action","payload","updateRequisitions","choiceCurrentRequisition","getCurrentRequisitionById","actionRequisition","actions","uiSlice","preloader","showPreloader","hidePreloader","actionsUI","requestSlice","requestStatus","initialRequest","pendingRequest","fulfilledRequest","rejectRequest","actionRequest","store","configureStore","reducer","ui","request","AddNewRequisitionButton","history","useHistory","Row","className","Col","Button","variant","onClick","push","hashMap","baseURL","fetchRequisitionData","dispatch","a","fetchData","fetch","ok","Error","json","response","console","log","SearchRequisition","useState","searchField","setSearchField","useDispatch","Form","inline","onSubmit","event","preventDefault","query","value","target","search","data","FormControl","type","placeholder","style","borderColor","onChange","RequisitionTable","head","onClickHandler","id","currentTarget","dataset","td","reduce","acc","prev","result","Object","entries","key","indexOf","map","item","index","cell","Date","toLocaleString","length","slice","Math","random","th","shortid","generate","Table","striped","bordered","hover","responsive","RequisitionTableHOC","useSelector","useEffect","Spinner","animation","Requisition","Container","maxWidth","Header","Navbar","bg","Brand","href","Layout","props","children","RequisitionDetailItemLink","color","textDecoration","link","text","RequisitionDetailItem","Card","Text","cardText","title","cardSpan","RequisitionDetail","params","useParams","requisitionId","getRequisitionById","classRequisitionDetailInfo","as","requisitionNumber","companyName","Body","dateReceivingRequisition","nameOfCarrier","phoneCarrier","atiCode","comments","method","deleteRequisition","RequisitionForm","inputs","setInputs","isValid","setIsValid","date","setDate","to","onChangeHandler","prevState","onBlurHandler","isValidity","values","every","o","getTime","Group","controlId","Label","Control","onBlur","selected","showTimeSelect","timeFormat","timeIntervals","timeCaption","dateFormat","placeholderText","locale","ru","rows","onBackHandler","disabled","titleSubmitButton","RequisitionEdit","_id","headers","body","JSON","stringify","NewRequisition","App","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","component","document","getElementById"],"mappings":"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","file":"static/js/main.4f6078bc.chunk.js","sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  requisition: [],\n  currentRequisitionId: null,\n  currentRequisition: null,\n  tableHead: ['#', 'Номер заявки', 'Дата', 'Название фирмы', 'ФИО перевозчика', 'Контактный телефон', 'АТИ код', 'Комментарий'],\n}\n\nconst requisitionSlice = createSlice({\n  name: 'requisition',\n  initialState,\n  reducers: {\n    initialFetch(state, action) {\n      state.requisition = action.payload;\n    },\n    updateRequisitions(state, action) {\n      state.requisition = action.payload;\n    },\n    choiceCurrentRequisition(state, action) {\n      state.currentRequisitionId = action.payload\n    },\n    getCurrentRequisitionById(state, action) {\n     state.currentRequisition = action.payload;\n    }\n  }\n});\n\nexport const actionRequisition = requisitionSlice.actions;\nexport default requisitionSlice;\n","import {createSlice} from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  preloader: false\n}\n\nconst uiSlice = createSlice({\n  name: 'ui',\n  initialState,\n  reducers: {\n    showPreloader(state) {\n      state.preloader = true\n    },\n    hidePreloader(state) {\n      state.preloader = false;\n    }\n  }\n})\n\nexport const actionsUI = uiSlice.actions;\nexport default uiSlice;\n","import {createSlice} from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  requestStatus: null\n}\n\nconst requestSlice = createSlice({\n  name: 'request',\n  initialState,\n  reducers: {\n    initialRequest(state) {\n      state.requestStatus = null;\n    },\n    pendingRequest(state) {\n      state.requestStatus = 'pending';\n    },\n    fulfilledRequest(state) {\n      state.requestStatus = 'fulfilled';\n    },\n    rejectRequest(state) {\n      state.requestStatus = 'reject';\n    }\n  }\n});\n\nexport const actionRequest = requestSlice.actions;\nexport default requestSlice;\n","import {configureStore} from \"@reduxjs/toolkit\";\nimport requisitionSlice from \"./requisition\";\nimport uiSlice from \"./ui\";\nimport requestSlice from \"./request\";\n\nconst store = configureStore({\n  reducer: {\n    requisition: requisitionSlice.reducer,\n    ui: uiSlice.reducer,\n    request: requestSlice.reducer\n  }\n});\n\nexport default store;\n","import {Button, Col, Row} from \"react-bootstrap\";\nimport {useHistory} from 'react-router-dom';\n\nconst AddNewRequisitionButton = () => {\n  const history = useHistory();\n\n  const onClickHandler = () => {\n    history.push('/requisition/create');\n  }\n\n  return (\n    <Row className=\"mb-5\">\n      <Col>\n        <Button className=\"btn btn-small\" variant=\"primary\" onClick={onClickHandler}>Добавить заявку</Button>\n      </Col>\n    </Row>\n  );\n}\n\nexport default AddNewRequisitionButton;\n","const hashMap =\n  [\n    '_id',\n    'requisitionNumber',\n    'dateReceivingRequisition',\n    'companyName',\n    'nameOfCarrier',\n    'phoneCarrier',\n    'atiCode',\n    'comments'\n  ];\nexport default hashMap;\n","export const baseURL = 'https://auto-logistician.herokuapp.com/api/requisition';\n","import {actionRequisition} from \"../requisition\";\nimport {actionsUI} from \"../ui\";\nimport {actionRequest} from \"../request\";\nimport {baseURL} from \"../../config/config\";\n\nexport const fetchRequisitionData = () => {\n  return async (dispatch) => {\n    dispatch(actionsUI.showPreloader())\n    const fetchData = async () => {\n      const request = await fetch(baseURL);\n      if (!request.ok) {\n        throw new Error('Ошибка получения данных!')\n      }\n      return request.json()\n    }\n    try {\n      const response = await fetchData();\n      dispatch(actionRequisition.initialFetch(response.requisition));\n      dispatch(actionsUI.hidePreloader());\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n\nexport const createRequisition = (requisition) => {\n  return async (dispatch) => {\n    dispatch(actionsUI.showPreloader())\n    const fetchData = async () => {\n      const request = await fetch(baseURL, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(requisition)\n      });\n      if (!request.ok) {\n        throw new Error('Ошибка получения данных!')\n      }\n      return request.json()\n    }\n    try {\n      const response = await fetchData();\n      dispatch(actionRequisition.updateRequisitions(response.requisition));\n      dispatch(actionsUI.hidePreloader());\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n\nexport const deleteRequisition = (id) => {\n  return async (dispatch) => {\n    dispatch(actionsUI.showPreloader())\n    const fetchData = async () => {\n      const request = await fetch(`${baseURL}/${id}`, {\n        method: 'DELETE'\n      });\n      if (!request.ok) {\n        throw new Error('Ошибка получения данных!')\n      }\n      return request.json()\n    }\n    try {\n      const response = await fetchData();\n      dispatch(actionRequisition.updateRequisitions(response.requisition));\n      dispatch(actionsUI.hidePreloader());\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n\nexport const getRequisitionById = (id) => {\n  return async (dispatch) => {\n    const fetchData = async () => {\n      const request = await fetch(`${baseURL}/${id}`);\n      if (!request.ok) {\n        throw new Error('Ошибка получения данных!')\n      }\n      return request.json()\n    }\n    try {\n      dispatch(actionRequest.pendingRequest());\n      const response = await fetchData();\n      dispatch(actionRequisition.getCurrentRequisitionById(response.requisition));\n      dispatch(actionRequest.fulfilledRequest());\n    } catch (error) {\n      console.log(error);\n      dispatch(actionRequest.rejectRequest());\n    }\n  }\n}\n\nexport const editRequisition = (requisition) => {\n  return async (dispatch) => {\n    const fetchData = async () => {\n      const request = await fetch(`${baseURL}/${requisition._id}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(requisition)\n      });\n      if (!request.ok) {\n        throw new Error('Ошибка получения данных!')\n      }\n      return request.json()\n    }\n    try {\n      const response = await fetchData();\n      dispatch(actionRequest.pendingRequest());\n      dispatch(actionRequisition.updateRequisitions(response.requisition));\n      dispatch(actionRequest.fulfilledRequest());\n    } catch (error) {\n      dispatch(actionRequest.rejectRequest());\n      console.log(error);\n    }\n  }\n}\n\nexport const searchRequisition = (query) => {\n  return async (dispatch) => {\n    const fetchData = async () => {\n      const request = await fetch(`${baseURL}/search?${query}`);\n      if (!request.ok) {\n        throw new Error('Ошибка получения данных!')\n      }\n      return request.json()\n    }\n    try {\n      dispatch(actionsUI.showPreloader())\n      dispatch(actionRequest.pendingRequest());\n      const response = await fetchData();\n      dispatch(actionRequisition.updateRequisitions(response.data));\n      dispatch(actionsUI.hidePreloader())\n      dispatch(actionRequest.fulfilledRequest());\n    } catch (error) {\n      console.log(error);\n      dispatch(actionRequest.rejectRequest());\n    }\n  }\n}\n\n\n","import {Button, Form, FormControl, } from \"react-bootstrap\";\nimport {useState} from \"react\";\nimport {useDispatch} from \"react-redux\";\nimport {fetchRequisitionData, searchRequisition} from \"../../store/actions/requisitionActions\";\n\nconst SearchRequisition = () => {\n  const [searchField, setSearchField] = useState('');\n  const dispatch = useDispatch();\n\n  const onSubmitHandler = (event) => {\n    event.preventDefault();\n    const {value} = event.target.search;\n    setSearchField('')\n    dispatch(searchRequisition(value))\n  }\n\n  const onClickHandler = () => {\n    dispatch(fetchRequisitionData());\n  }\n\n  const onChangeHandler = (event) => {\n    const {value} = event.target;\n    setSearchField(value)\n  }\n\n  return (\n    <>\n      <div className=\"mb-2\">\n        <Form inline onSubmit={onSubmitHandler}>\n          <FormControl\n            type=\"text\"\n            placeholder=\"Введите буквы...\"\n            className=\"mr-sm-2\"\n            name=\"search\"\n            value={searchField}\n            style={{borderColor: '#007bff'}}\n            onChange={onChangeHandler}/>\n          <Button type=\"submit\" variant=\"outline-primary\">Поиск</Button>\n          <Button variant=\"outline-primary ml-2\" onClick={onClickHandler}>Очистить</Button>\n        </Form>\n      </div>\n    </>\n  )\n}\n\nexport default SearchRequisition;\n","import {useHistory} from 'react-router-dom';\nimport shortid from 'shortid'\nimport {Table} from \"react-bootstrap\";\nimport {serializeRequisition} from \"../../../utils/serializeRequisitionData\";\nimport SearchRequisition from \"../../SearchRequisition/SearchRequisition\";\nimport PropTypes from 'prop-types';\n\nconst RequisitionTable = ({requisition, head}) => {\n  const history = useHistory();\n\n  const onClickHandler = (event) => {\n    const {id} = event.currentTarget.dataset;\n    history.push(`/requisition/${id}`)\n  }\n\n  const serializeData = serializeRequisition(requisition);\n\n  const td = serializeData.map((item, index) => {\n    const result = item.map(cell => {\n      let value = cell[1];\n      switch (cell[0]) {\n        case '_id':\n          value = index + 1;\n          break;\n        case 'dateReceivingRequisition':\n          value = value = new Date(cell[1]).toLocaleString();\n          break;\n        case 'comments':\n          value = value.length > 15 ? `${value.slice(0, 15)}...` : value;\n          break;\n        default:\n          break;\n      }\n      return (<td\n        key={`${item[0][1]}${Math.random()}`}\n        className=\"text-center\"\n        data-type={cell[0]}\n      >\n        {value}\n      </td>)\n    });\n\n    return (\n      <tr\n        key={item[0][1]}\n        data-id={item[0][1]}\n        onClick={onClickHandler}\n      >\n        {result}\n      </tr>\n    );\n  });\n\n  const th = head.map((item) => (\n    <th key={shortid.generate()} className=\"text-center\">{item}</th>\n  ))\n\n  return (\n    <>\n      <SearchRequisition/>\n      <Table striped bordered hover responsive=\"lg\">\n        <thead>\n        <tr>\n          {th}\n        </tr>\n        </thead>\n        <tbody>\n          {td}\n        </tbody>\n      </Table>\n    </>\n  )\n}\n\nRequisitionTable.propTypes = {\n  requisition: PropTypes.array.isRequired,\n  head: PropTypes.array.isRequired,\n}\n\nexport default RequisitionTable;\n","import hashMap from \"./hashMap\";\n\nexport const serializeRequisition = (value) => {\n  return value.reduce((acc, prev) => {\n    const result = Object.entries(prev).reduce((acc, [key, value]) => {\n      const idx = hashMap.indexOf(key);\n      acc[idx] = [key, value];\n      return acc;\n    }, [])\n    acc.push(result);\n    return acc;\n  },[])\n}\n","import {Col, Row, Spinner} from \"react-bootstrap\";\nimport RequisitionTable from \"./RequisitionTable/RequisitionTable\";\nimport {useSelector, useDispatch} from \"react-redux\";\nimport {useEffect} from \"react\";\nimport {fetchRequisitionData} from \"../../store/actions/requisitionActions\";\n\nconst RequisitionTableHOC = () => {\n  const tableHead = useSelector(state => state.requisition.tableHead);\n  const requisition = useSelector(state => state.requisition.requisition);\n  const preloader = useSelector(state => state.ui.preloader);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchRequisitionData());\n  }, [dispatch]);\n\n  return (\n    <Row>\n      <Col>\n        {preloader\n          ? <Spinner\n            animation=\"border\"\n            variant=\"primary\"\n            className=\"d-block ml-auto mr-auto\"\n            />\n          :\n          <RequisitionTable\n            head={tableHead}\n            requisition={requisition}\n          />\n        }\n      </Col>\n    </Row>\n  );\n}\n\nexport default RequisitionTableHOC;\n","import {Container} from \"react-bootstrap\";\nimport AddNewRequisitionButton from \"../components/AddNewRequisitionButton/AddNewRequisitionButton\";\nimport RequisitionTableHOC from \"../components/RequisitionTableHOC/RequisitionTableHOC\";\n\nconst Requisition = () => {\n  return (\n    <>\n      <Container style={{maxWidth: `${1400}px`}}>\n        <AddNewRequisitionButton />\n        <RequisitionTableHOC />\n      </Container>\n    </>\n  )\n}\n\nexport default Requisition;\n","import {Navbar} from \"react-bootstrap\";\nconst Header = () => {\n  return (\n    <Navbar bg=\"primary\" variant=\"dark\" className=\"justify-content-between mb-5\">\n      <Navbar.Brand href=\"/\" className=\"mr-a\">АвтоЛогист</Navbar.Brand>\n    </Navbar>\n  )\n}\n\nexport default Header;\n","import Header from \"../Header/Header\";\nimport PropTypes from 'prop-types';\n\nconst Layout = (props) => {\n  return (\n    <>\n      <Header/>\n      <main>{props.children}</main>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout;\n","const RequisitionDetailItemLink = (props) => {\n  return (\n    <a style={{color: 'black', textDecoration: 'underline'}}\n       href={props.link}\n    >{props.text}\n    </a>\n  )\n}\n\nexport default RequisitionDetailItemLink;\n","import {Card} from \"react-bootstrap\";\nimport RequisitionDetailItemLink from \"./RequisitionDetailItemLink/RequisitionDetailItemLink\";\n\nconst RequisitionDetailItem = (props) => {\n  return (\n    <Card.Text\n      className={props.cardText}\n    >\n      {props.title}:\n      <span className={props.cardSpan}\n      >\n        {\n          props.link\n            ? <RequisitionDetailItemLink text={props.text} link={props.link}/>\n            : props.text\n        }\n      </span>\n    </Card.Text>\n  )\n}\n\nexport default RequisitionDetailItem;\n","import {useDispatch, useSelector} from \"react-redux\";\nimport {useEffect} from \"react\";\nimport {useParams, useHistory} from 'react-router-dom'\nimport {Button, Card, Container} from \"react-bootstrap\";\nimport {deleteRequisition, getRequisitionById} from \"../store/actions/requisitionActions\";\nimport {actionRequest} from \"../store/request\";\nimport RequisitionDetailItem from \"../components/RequisitionDetailItem/RequisitionDetailItem\";\n\nconst RequisitionDetail = () => {\n  const currentRequisition = useSelector(state => state.requisition.currentRequisition);\n  const history = useHistory();\n  const params = useParams();\n  const dispatch = useDispatch();\n\n  const id = params.requisitionId;\n\n  useEffect(() => {\n    dispatch(getRequisitionById(id))\n  }, [dispatch, id]);\n\n  if (!currentRequisition) {\n    return null;\n  }\n\n  const onBackHandler = () => {\n    history.push('/');\n  }\n\n  const onEditHandler = () => {\n    dispatch(actionRequest.initialRequest())\n    history.push(`/requisition/edit/${id}`);\n  }\n\n  const onDeleteHandler = () => {\n    dispatch(deleteRequisition(id))\n    history.push('/');\n  }\n\n  const classRequisitionDetailInfo = {\n    cardText: \"font-weight-bold\",\n    cardSpan: \"font-weight-normal d-inline-block ml-2\"\n  }\n\n  return (\n    <Container>\n      <Card>\n        <Card.Header\n          as=\"h5\">\n          {`Заявка №${currentRequisition.requisitionNumber}, ${currentRequisition.companyName}`}\n        </Card.Header>\n        <Card.Body>\n          <RequisitionDetailItem\n            {...classRequisitionDetailInfo}\n            text={currentRequisition.requisitionNumber}\n            title=\"Номер заявки\"\n          />\n          <RequisitionDetailItem\n            {...classRequisitionDetailInfo}\n            text={new Date(currentRequisition.dateReceivingRequisition).toLocaleString()}\n            title=\"Дата и время получения заявки от клиента\"\n          />\n          <RequisitionDetailItem\n            {...classRequisitionDetailInfo}\n            text={currentRequisition.companyName}\n            title=\"Название фирмы клиента\"\n          />\n          <RequisitionDetailItem\n            {...classRequisitionDetailInfo}\n            text={currentRequisition.nameOfCarrier}\n            title=\"ФИО перевозчика\"\n          />\n          <RequisitionDetailItem\n            {...classRequisitionDetailInfo}\n            text={currentRequisition.phoneCarrier}\n            title=\"Контактный телефон перевозчика\"\n          />\n          <RequisitionDetailItem\n            {...classRequisitionDetailInfo}\n            text={currentRequisition.atiCode}\n            title=\"ATI код\"\n            link={`https://ati.su/firms/${currentRequisition.atiCode}/info`}\n          />\n          <RequisitionDetailItem\n            {...classRequisitionDetailInfo}\n            text={currentRequisition.comments}\n            title=\"Комментарии\"\n          />\n          <Button\n            variant=\"primary mr-3\"\n            onClick={onBackHandler}\n          >\n            Назад\n          </Button>\n          <Button\n            variant=\"primary mr-3\"\n            onClick={onEditHandler}\n          >\n            Редактировать\n          </Button>\n          <Button\n            variant=\"primary\"\n            onClick={onDeleteHandler}\n          >\n            Удалить\n          </Button>\n        </Card.Body>\n      </Card>\n    </Container>\n  )\n}\n\nexport default RequisitionDetail;\n","import {Button, Form, Row} from \"react-bootstrap\";\nimport DatePicker from \"react-datepicker\";\nimport ru from \"date-fns/locale/ru\";\nimport {checkFormValidity} from \"../../utils/checkFormValidity\";\nimport {useState} from \"react\";\nimport {Link, useParams} from \"react-router-dom\";\nimport PropTypes from 'prop-types';\n\nconst RequisitionForm = (props) => {\n  const [inputs, setInputs] = useState(props.inputs);\n  const [isValid, setIsValid] = useState(true);\n  const [date, setDate] = useState(props.inputs?.dateReceivingRequisition);\n  const params = useParams();\n\n  if (!props.inputs) {\n    return (\n      <>\n        <Row className=\"justify-content-center\">\n          <p>Что-то пошло не так...</p>\n        </Row>\n        <Row className=\"justify-content-center\">\n          <Link className=\"btn btn-primary\" to={`/requisition/${params.requisitionId}`}>Вернуться к просмотру заявки</Link>\n        </Row>\n      </>\n    )\n  }\n\n  const onSubmitHandler = (event) => {\n    event.preventDefault();\n    const payload = {\n      ...inputs,\n      dateReceivingRequisition: typeof date === 'number' ? date : date.getTime(),\n    }\n    props.onSubmit(payload);\n  }\n  const onChangeHandler = (event) => {\n    const {id, value} = event.target;\n    setInputs((prevState) => ({\n      ...prevState,\n      [id]: value,\n    }))\n  }\n  const onChangeDateHandler = (value) => {\n    setDate(new Date(value.getTime()))\n  }\n\n  const onBlurHandler = () => {\n    const isValidity = checkFormValidity(inputs) && !!date;\n    setIsValid(isValidity);\n  }\n\n  return (\n    <>\n      <Form onSubmit={onSubmitHandler}>\n        <Form.Group className=\"mb-3\" controlId=\"requisitionNumber\">\n          <Form.Label>Номер заявки</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Введите номер заявки\"\n            value={inputs.requisitionNumber}\n            onChange={onChangeHandler}\n            onBlur={onBlurHandler}/>\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"dateReceivingRequisition\">\n          <Form.Label>Дата и время получения заявки</Form.Label>\n          <DatePicker\n            selected={date}\n            onChange={onChangeDateHandler}\n            onBlur={onBlurHandler}\n            showTimeSelect\n            timeFormat=\"HH:mm\"\n            timeIntervals={15}\n            timeCaption=\"time\"\n            dateFormat=\"d MMMM, yyyy HH:mm\"\n            placeholderText=\"Выберите дату и время получения заявки\"\n            locale={ru}\n          />\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"companyName\">\n          <Form.Label>Название фирмы клиента</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Введите название перевозчика\"\n            value={inputs.companyName}\n            onChange={onChangeHandler}\n            onBlur={onBlurHandler}/>\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"nameOfCarrier\">\n          <Form.Label>ФИО перевозчика</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Введите ФИО перевозчика\"\n            value={inputs.nameOfCarrier}\n            onChange={onChangeHandler}\n            onBlur={onBlurHandler}/>\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"phoneCarrier\">\n          <Form.Label>Контактный номер перевозчика</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Введите телефон перевозчика\"\n            value={inputs.phoneCarrier}\n            onChange={onChangeHandler}\n            onBlur={onBlurHandler}/>\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"atiCode\">\n          <Form.Label>АТИ код перевозчика</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Введите код из системы АТИ\"\n            value={inputs.atiCode}\n            onChange={onChangeHandler}\n            onBlur={onBlurHandler}/>\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"comments\">\n          <Form.Label>Комментарий</Form.Label>\n          <Form.Control\n            as=\"textarea\"\n            rows={3}\n            placeholder=\"Напишите свой комментарий\"\n            value={inputs.comments}\n            onChange={onChangeHandler}\n            onBlur={onBlurHandler}/>\n        </Form.Group>\n        <Button\n          variant=\"primary\"\n          className=\"mr-3\"\n          type=\"reset\"\n          onClick={props.onBackHandler}>\n          Назад\n        </Button>\n        <Button\n          variant=\"primary\"\n          type=\"submit\"\n          disabled={!isValid}>\n          {props.titleSubmitButton}\n        </Button>\n      </Form>\n    </>\n  );\n}\n\nRequisitionForm.propTypes = {\n  inputs: PropTypes.object.isRequired,\n  titleSubmitButton: PropTypes.string.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  onBackHandler: PropTypes.func.isRequired\n}\n\nexport default RequisitionForm;\n","export const checkFormValidity = (value) => {\n  return Object.values(value).every(o => !!o)\n}\n","import { Container} from \"react-bootstrap\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {useHistory} from 'react-router-dom'\nimport {editRequisition} from \"../store/actions/requisitionActions\";\nimport RequisitionForm from \"../components/RequisitionForm/RequisitionForm\";\nimport {useEffect} from \"react\";\n\n\n\nconst RequisitionEdit = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const currentRequisition = useSelector(state => state.requisition.currentRequisition);\n  const requestStatus = useSelector(state => state.request.requestStatus);\n\n  useEffect(() => {\n    if (requestStatus === 'fulfilled') {\n      history.push('/');\n    }\n  }, [history, requestStatus])\n\n  const onSubmitHandler = (payload) => {\n    dispatch(editRequisition(payload));\n  }\n\n  const  onBackHandler = () => {\n    history.push(`/requisition/${currentRequisition._id}`)\n  };\n\n  return (\n    <Container>\n      <RequisitionForm\n        inputs={currentRequisition}\n        onSubmit={onSubmitHandler}\n        titleSubmitButton=\"Отредактировать\"\n        onBackHandler={onBackHandler}\n      />\n    </Container>\n  )\n}\n\nexport default RequisitionEdit;\n","import {useDispatch} from \"react-redux\";\nimport {useHistory} from \"react-router-dom\";\nimport {createRequisition} from \"../store/actions/requisitionActions\";\nimport RequisitionForm from \"../components/RequisitionForm/RequisitionForm\";\nimport {Container} from \"react-bootstrap\";\n\nconst initialState = {\n  requisitionNumber: '',\n  companyName: '',\n  nameOfCarrier: '',\n  phoneCarrier: '',\n  atiCode: '',\n  comments: '',\n}\n\nconst NewRequisition = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const onSubmitHandler = (payload) => {\n    dispatch(createRequisition(payload));\n    history.push(`/`)\n  }\n\n  const onBackHandler = () => {\n    history.push(`/`)\n  };\n\n  return (\n    <Container>\n      <RequisitionForm\n        inputs={initialState}\n        titleSubmitButton=\"Создать заявку\"\n        onSubmit={onSubmitHandler}\n        onBackHandler={onBackHandler}\n      />\n    </Container>\n  );\n}\n\nexport default NewRequisition;\n","import './App.css';\nimport {Switch, Route} from 'react-router-dom'\nimport Requisition from \"./pages/Requisition\";\nimport Layout from \"./components/Layout/Layout\";\nimport RequisitionDetail from \"./pages/RequisitionDetail\";\nimport RequisitionEdit from \"./pages/RequisitionEdit\";\nimport NewRequisition from \"./pages/NewRequisition\";\n\nfunction App() {\n  return (\n    <>\n      <Layout>\n        <Switch>\n          <Route path=\"/\" exact>\n            <Requisition />\n          </Route>\n          <Route path=\"/requisition/create\" exact>\n            <NewRequisition />\n          </Route>\n          <Route path=\"/requisition/:requisitionId\" exact>\n            <RequisitionDetail />\n          </Route>\n          <Route path=\"/requisition/edit/:requisitionId\">\n            <RequisitionEdit />\n          </Route>\n          <Route path=\"*\">\n            <div className=\"text-center\">This Page not found!</div>\n          </Route>\n        </Switch>\n      </Layout>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from \"react-redux\";\nimport {BrowserRouter, Route} from \"react-router-dom/\";\nimport store from \"./store\";\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <Route path=\"/\" component={App} />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}